# Generated by Django 4.1.1 on 2022-12-25 13:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CheckCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='검사기관')),
            ],
            options={
                'db_table': 'check_company',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ModelType',
            fields=[
                ('model', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True, verbose_name='모델명')),
                ('type', models.CharField(choices=[('Single', 'Single'), ('Twin', 'Twin')], max_length=200, verbose_name='제품 타입')),
                ('load_weight', models.IntegerField(default=0, verbose_name='적재하중')),
                ('operation_section', models.IntegerField(default=0, verbose_name='운행구간')),
                ('capacity', models.IntegerField(default=0, verbose_name='최대정원')),
                ('rated_speed', models.IntegerField(default=0, verbose_name='정격속도')),
            ],
            options={
                'db_table': 'modeltype',
                'ordering': ['model'],
            },
        ),
        migrations.CreateModel(
            name='Parts',
            fields=[
                ('serial', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='시리얼')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='제조일')),
                ('discard_date', models.DateField(blank=True, null=True, verbose_name='폐기일')),
            ],
            options={
                'db_table': 'parts',
                'ordering': ['serial', 'production_date'],
            },
        ),
        migrations.CreateModel(
            name='PartsType',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True, verbose_name='부품명')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('serial', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True, verbose_name='리프트 번호')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='제조일')),
                ('discard_date', models.DateField(blank=True, null=True, verbose_name='폐기일')),
                ('model', models.ForeignKey(blank=True, db_column='model_type', null=True, on_delete=django.db.models.deletion.CASCADE, to='item_log.modeltype', verbose_name='모델명')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductionCompany',
            fields=[
                ('business_number', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True, verbose_name='사업자번호')),
                ('name', models.CharField(max_length=400, verbose_name='제조사명')),
                ('ceo', models.CharField(max_length=100, verbose_name='대표')),
                ('address', models.CharField(max_length=1000, verbose_name='주소')),
                ('phone', models.CharField(max_length=100, verbose_name='전화번호')),
                ('insureance_company', models.CharField(blank=True, max_length=200, null=True, verbose_name='보험사명')),
                ('insureance', models.CharField(blank=True, max_length=200, null=True, verbose_name='보험상품명')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='보험기간 시작일')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='보장기간 종료시점')),
            ],
            options={
                'db_table': 'production_company',
                'ordering': ['business_number'],
            },
        ),
        migrations.CreateModel(
            name='Brake',
            fields=[
                ('brake_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='item_log.parts', verbose_name='브레이크 시리얼')),
                ('torque', models.FloatField(verbose_name='토크')),
            ],
            options={
                'db_table': 'brakes',
                'ordering': ['brake_id'],
            },
            bases=('item_log.parts',),
        ),
        migrations.CreateModel(
            name='Motor',
            fields=[
                ('motor_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='item_log.parts', verbose_name='모터 시리얼')),
                ('capacity', models.FloatField(verbose_name='용량')),
            ],
            options={
                'db_table': 'motor',
                'ordering': ['motor_id'],
            },
            bases=('item_log.parts',),
        ),
        migrations.CreateModel(
            name='Reducer',
            fields=[
                ('reducer_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='item_log.parts', verbose_name='감속기 시리얼')),
                ('gear_ratio', models.FloatField(verbose_name='감속비')),
            ],
            options={
                'db_table': 'reducers',
                'ordering': ['reducer_id'],
            },
            bases=('item_log.parts',),
        ),
        migrations.CreateModel(
            name='SafetyDevice',
            fields=[
                ('safety_device_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='item_log.parts', verbose_name='가바나 시리얼')),
                ('capacity', models.FloatField(verbose_name='용량')),
            ],
            options={
                'db_table': 'safety_devices',
                'ordering': ['safety_device_id'],
            },
            bases=('item_log.parts',),
        ),
        migrations.CreateModel(
            name='SelfDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_company', models.CharField(blank=True, max_length=200, null=True, verbose_name='점검업체')),
                ('checker', models.CharField(blank=True, max_length=200, null=True, verbose_name='점검자')),
                ('date', models.DateField(blank=True, null=True, verbose_name='점검일자')),
                ('result', models.CharField(blank=True, choices=[('합', '적합'), ('불', '부적합')], max_length=200, null=True, verbose_name='자체점검결과')),
                ('check_list', models.CharField(blank=True, choices=[('제출', '제출'), ('미제출', '미제출')], max_length=200, null=True, verbose_name='점검표')),
                ('product', models.ForeignKey(db_column='product_serial', on_delete=django.db.models.deletion.CASCADE, to='item_log.product', verbose_name='리프트 번호')),
            ],
            options={
                'db_table': 'self_diagnosis',
                'ordering': ['date', 'product'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='production_company',
            field=models.ForeignKey(blank=True, db_column='production_company_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='item_log.productioncompany', verbose_name='제조업체'),
        ),
        migrations.AddField(
            model_name='parts',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='item_log.partstype', verbose_name='부품명'),
        ),
        migrations.CreateModel(
            name='FaultHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fault_type', models.TextField(verbose_name='고장유형')),
                ('date', models.DateField(verbose_name='고장일')),
                ('cause', models.TextField(verbose_name='고장원인')),
                ('repair_company', models.CharField(max_length=200, verbose_name='구출기관')),
                ('parts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='item_log.parts', verbose_name='부품 시리얼')),
            ],
            options={
                'db_table': 'fault_history',
                'ordering': ['date', 'parts'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=400, verbose_name='현장명')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='소재지')),
                ('num_floors', models.IntegerField(blank=True, null=True, verbose_name='지상층')),
                ('num_basements', models.IntegerField(blank=True, null=True, verbose_name='지하층')),
                ('installation_date', models.DateField(blank=True, null=True, verbose_name='설치일/최초설치일')),
                ('next_check_date', models.DateField(blank=True, null=True, verbose_name='정밀안전검사예정일')),
                ('withdrawal_date', models.DateField(blank=True, null=True, verbose_name='철거예정일')),
                ('safety_checker', models.CharField(blank=True, max_length=200, null=True, verbose_name='안전관리자')),
                ('safety_checker_higher_date', models.DateField(blank=True, null=True, verbose_name='안전관리자선임일')),
                ('safety_checker_phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='안전관리자 연락처')),
                ('safety_edu_comp_date', models.DateField(blank=True, null=True, verbose_name='안전교육 이수일')),
                ('management_company', models.CharField(blank=True, max_length=200, null=True, verbose_name='유지관리업체')),
                ('management_comp_phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='유지관리업체 연락처')),
                ('subcontract_company', models.CharField(blank=True, max_length=200, null=True, verbose_name='하도급/공동수급업체')),
                ('subcontract_comp_phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='하도급/공동수급업체 연락처')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='item_log.parts', verbose_name='부품 시리얼')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='item_log.product', verbose_name='제품 시리얼')),
            ],
            options={
                'db_table': 'contract',
                'ordering': ['installation_date', 'product', 'part'],
            },
        ),
        migrations.CreateModel(
            name='CheckHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(max_length=200, verbose_name='검사종류')),
                ('date', models.DateField(blank=True, null=True, verbose_name='검사일')),
                ('effective_duration', models.IntegerField(blank=True, default=6, null=True, verbose_name='운행유효기간(개월)')),
                ('inspector', models.CharField(blank=True, max_length=100, null=True, verbose_name='검사원')),
                ('result', models.CharField(choices=[('합격', '합격'), ('불합격', '불합격'), ('조건부합격', '조건부합격')], max_length=100, verbose_name='합격유무')),
                ('inspection_agency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='item_log.checkcompany', verbose_name='검사기관')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='item_log.parts', verbose_name='부품 시리얼')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='item_log.product', verbose_name='제품 시리얼')),
            ],
            options={
                'db_table': 'check_history',
                'ordering': ['date', 'product', 'part'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='brake',
            field=models.OneToOneField(blank=True, db_column='brake', null=True, on_delete=django.db.models.deletion.SET_NULL, to='item_log.brake', verbose_name='브레이크'),
        ),
        migrations.AddField(
            model_name='product',
            name='motor',
            field=models.OneToOneField(blank=True, db_column='motor', null=True, on_delete=django.db.models.deletion.SET_NULL, to='item_log.motor', verbose_name='모터'),
        ),
        migrations.AddField(
            model_name='product',
            name='reducer',
            field=models.OneToOneField(blank=True, db_column='reducer', null=True, on_delete=django.db.models.deletion.SET_NULL, to='item_log.reducer', verbose_name='감속기'),
        ),
        migrations.AddField(
            model_name='product',
            name='safety_device',
            field=models.OneToOneField(blank=True, db_column='safety_device', null=True, on_delete=django.db.models.deletion.SET_NULL, to='item_log.safetydevice', verbose_name='가바나'),
        ),
        migrations.AddConstraint(
            model_name='contract',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('part__isnull', True), ('product__isnull', False)), models.Q(('part__isnull', False), ('product__isnull', True)), _connector='OR'), name='item_log_contract_part_or_product'),
        ),
        migrations.AddConstraint(
            model_name='checkhistory',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('part__isnull', True), ('product__isnull', False)), models.Q(('part__isnull', False), ('product__isnull', True)), _connector='OR'), name='item_log_checkhistory_part_or_product', violation_error_message='부품이나 제품 중 하나만 선택가능합니다.'),
        ),
    ]
